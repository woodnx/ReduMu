// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// ActualIDGet implements GET /actual/{id} operation.
	//
	// Get an actual.
	//
	// GET /actual/{id}
	ActualIDGet(ctx context.Context, params ActualIDGetParams) (*Actual, error)
	// ActualsGet implements GET /actuals operation.
	//
	// Get all actuals per the user.
	//
	// GET /actuals
	ActualsGet(ctx context.Context) ([]Actual, error)
	// ActualsPost implements POST /actuals operation.
	//
	// Create a new actual.
	//
	// POST /actuals
	ActualsPost(ctx context.Context, req OptActualsPostReq) error
	// ScheduleIDGet implements GET /schedule/{id} operation.
	//
	// Get a schedule.
	//
	// GET /schedule/{id}
	ScheduleIDGet(ctx context.Context, params ScheduleIDGetParams) (*Schedule, error)
	// SchedulesGet implements GET /schedules operation.
	//
	// Get all schedules per the user.
	//
	// GET /schedules
	SchedulesGet(ctx context.Context) ([]Schedule, error)
	// SchedulesPost implements POST /schedules operation.
	//
	// Create a new schedule.
	//
	// POST /schedules
	SchedulesPost(ctx context.Context, req OptSchedulesPostReq) error
	// TaskIDGet implements GET /task/{id} operation.
	//
	// Get a task.
	//
	// GET /task/{id}
	TaskIDGet(ctx context.Context, params TaskIDGetParams) (*Task, error)
	// TasksGet implements GET /tasks operation.
	//
	// Get all tasks per the user.
	//
	// GET /tasks
	TasksGet(ctx context.Context) ([]Task, error)
	// TasksPost implements POST /tasks operation.
	//
	// Create a new task.
	//
	// POST /tasks
	TasksPost(ctx context.Context, req OptTasksPostReq) error
	// TasksScheduledGet implements GET /tasks/scheduled/ operation.
	//
	// Get all scheduled tasks per the user.
	//
	// GET /tasks/scheduled/
	TasksScheduledGet(ctx context.Context) ([]ScheduledTask, error)
	// TasksScheduledIDGet implements GET /tasks/scheduled/{id} operation.
	//
	// Get a scheduled tasks.
	//
	// GET /tasks/scheduled/{id}
	TasksScheduledIDGet(ctx context.Context, params TasksScheduledIDGetParams) (*ScheduledTask, error)
	// TasksScheduledPost implements POST /tasks/scheduled/ operation.
	//
	// Create a new scheduled task.
	//
	// POST /tasks/scheduled/
	TasksScheduledPost(ctx context.Context, req OptTasksScheduledPostReq) error
	// UserIDGet implements GET /user/{id} operation.
	//
	// Get a user.
	//
	// GET /user/{id}
	UserIDGet(ctx context.Context, params UserIDGetParams) (*User, error)
	// UsersGet implements GET /users operation.
	//
	// List all users.
	//
	// GET /users
	UsersGet(ctx context.Context) ([]User, error)
	// UsersPost implements POST /users operation.
	//
	// Create a new user.
	//
	// POST /users
	UsersPost(ctx context.Context, req OptUsersPostReq) error
	// NewError creates *ErrorStatusCode from error returned by handler.
	//
	// Used for common default response.
	NewError(ctx context.Context, err error) *ErrorStatusCode
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h Handler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		baseServer: s,
	}, nil
}

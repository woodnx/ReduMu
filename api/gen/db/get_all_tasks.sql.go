// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: get_all_tasks.sql

package db

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const getAllTasks = `-- name: GetAllTasks :many
SELECT 
    "id", 
    "title", 
    "status", 
    "created", 
    "modified"
FROM task
`

type GetAllTasksRow struct {
	ID       uuid.UUID
	Title    string
	Status   string
	Created  time.Time
	Modified time.Time
}

func (q *Queries) GetAllTasks(ctx context.Context) ([]GetAllTasksRow, error) {
	rows, err := q.db.QueryContext(ctx, getAllTasks)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetAllTasksRow
	for rows.Next() {
		var i GetAllTasksRow
		if err := rows.Scan(
			&i.ID,
			&i.Title,
			&i.Status,
			&i.Created,
			&i.Modified,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
